<Window x:Class="Sims.UI.Dialogs.View.MedicinesView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Sims.UI.Dialogs.View" xmlns:converters="clr-namespace:Sims.CompositeComon.Converters" 
        xmlns:xcad="http://schemas.xceed.com/wpf/xaml/avalondock"
        mc:Ignorable="d"
        Title="MedicinesView" Height="450" Width="800">
    <Window.Resources>
        <converters:DialogStateToEnabledConverter x:Key="DialogStateToEnabledConverter"/>
    </Window.Resources>
    <DockPanel>
        <Grid>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" >

                    <TextBox Width="150" Height="30" Margin="5" Grid.Column="0" Grid.Row="0" Text="{Binding Search, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}"/>
                    <Button Width="30" Height="30" VerticalAlignment="Center">

                    </Button>
                </StackPanel>

                <Grid Grid.Column="0" Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <DataGrid x:Name="DataGrid" Grid.Column="0" SelectionMode="Single" ItemsSource="{Binding Items, UpdateSourceTrigger=PropertyChanged}" HorizontalScrollBarVisibility="Auto"
            SelectedItem="{Binding SelectedItem}" Height="Auto" AutoGenerateColumns="False" CanUserAddRows="False" ColumnWidth="*" >
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Code" CanUserSort="False" Binding="{Binding Code, Mode=OneWay}"/>
                            <DataGridTextColumn Header="Name" Binding="{Binding Name, Mode=OneWay}"/>
                            <DataGridTextColumn Header="Quantity" Binding="{Binding Quantity, Mode=OneWay}"/>
                            <DataGridTextColumn Header="Producer" CanUserSort="False" Binding="{Binding Producer, Mode=OneWay}"/>
                            <DataGridTextColumn Header="Is accepted" CanUserSort="False" Binding="{Binding Accepted, Mode=OneWay}"/>
                            <DataGridTextColumn Header="Is deleted" CanUserSort="False" Binding="{Binding Deleted, Mode=OneWay}"/>
                            <DataGridTextColumn Header="Price" Binding="{Binding Price, Mode=OneWay}"/>
                        </DataGrid.Columns>
                    </DataGrid>

                    <DataGrid x:Name="DataGrid2" Grid.Column="1" SelectionMode="Single" ItemsSource="{Binding IngredientTableModels, UpdateSourceTrigger=PropertyChanged}" HorizontalScrollBarVisibility="Auto"
            SelectedItem="{Binding SelectedItem}" Height="Auto" AutoGenerateColumns="False" CanUserAddRows="False" ColumnWidth="*">
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                    <Setter Property="IsHitTestVisible" Value="False"/>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Amount of ingredient in grams" Binding="{Binding Quantity}"/>
                            <DataGridTextColumn Header="Name of ingredient" Binding="{Binding IngredientName}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Grid>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Column="0" Grid.Row="1" DockPanel.Dock="Bottom"  IsEnabled="{Binding DialogState, Converter={StaticResource DialogStateToEnabledConverter}}" Margin="0,232,0,-163">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />

                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Label Grid.Column="0" Grid.Row="0" Content="Code: " />
                    <TextBox Text="{Binding Path=SelectedItem.Code, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" 
                                         Grid.Column="1" Grid.Row="0" Width="200" Margin="0,5,0,5"/>
                    <!--<TextBlock Text="{Binding SelectedItem.ValidationErrors[Patient]}" Foreground="Red" Grid.Row="0" Grid.Column="2" Margin="15,0,0,0"/>-->

                    <Label Grid.Column="0" Grid.Row="1" Content="Name: " />
                    <TextBox Text="{Binding Path=SelectedItem.Name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}" 
                                         Grid.Column="1" Grid.Row="1" Width="200" Margin="0,5,0,5"/>
                    <!--<TextBlock Text="{Binding SelectedItem.ValidationErrors[Price]}" Foreground="Red" Grid.Row="1" Grid.Column="2" Margin="15,0,0,0"/>-->

                    <Label Grid.Column="0" Grid.Row="2" Content="Quantity"/>
                    <TextBox Text="{Binding Path=SelectedItem.Quantity, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"
                                         Grid.Row="2" Grid.Column="1" Width="200" Margin="0,5,0,5"/>
                    <!--<TextBlock Text="{Binding SelectedItem.ValidationErrors[Ingredients]}" Foreground="Red" Grid.Row="2" Grid.Column="2" Margin="15,0,0,0"/>-->

                    <Label Grid.Column="0" Grid.Row="3" Content="Producer: "/>
                    <TextBox Text="{Binding Path=SelectedItem.Producer, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True, ValidatesOnExceptions=True}"
                                         Grid.Row="3" Grid.Column="1" Width="200" Margin="0,5,0,5"/>
                    <!--<TextBlock Text="{Binding SelectedItem.ValidationErrors[Alergens]}" Foreground="Red" Grid.Row="3" Grid.Column="2" Margin="15,0,0,0"/>-->
                </Grid>

                <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Vertical" Margin="0,232,10,10" HorizontalAlignment="Right" Grid.RowSpan="2" >
                    <Button Grid.Column="0" Grid.Row="1" Content="Add" Command="{Binding AddCommand}" Margin="5" />
                    <Button Grid.Column="0" Grid.Row="2" Content="Edit" Command="{Binding EditCommand}" Margin="5" />
                    <Button Grid.Column="0" Grid.Row="3" Content="Delete" Command="{Binding DeleteCommand}" Margin="5" />
                    <Button Grid.Column="0" Grid.Row="4" IsDefault="True" Content="Ok" Command="{Binding OkCommand}" Margin="5" />
                    <Button Grid.Column="0" Grid.Row="5" IsCancel="True" Content="Cancel" Command="{Binding CancelCommand}" Margin="5" />
                </StackPanel>
            </Grid>
        </Grid>
    </DockPanel>
</Window>
